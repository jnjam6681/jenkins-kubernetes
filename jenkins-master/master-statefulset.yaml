apiVersion: v1
kind: ServiceAccount
metadata:
  name: jenkins
  namespace: default
  labels:
    app: jenkins

---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: jenkins
  namespace: default
  labels:
    app: jenkins
subjects:
- kind: ServiceAccount
  name: jenkins
  namespace: default
roleRef:
  kind: ClusterRole
  name: cluster-admin
  apiGroup: rbac.authorization.k8s.io

---
apiVersion: v1
kind: Service
metadata:
  name: jenkins-service
spec:
  selector:
    app: jenkins
  ports:
  - port: 80
    protocol: TCP
    targetPort: jenkins-port
  type: ClusterIP

---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: jenkins
  namespace: default
  labels:
    app: jenkins
spec:
  replicas: 1
  serviceName: jenkins-service
  selector:
    matchLabels:
      app: jenkins
  template:
    metadata:
      labels:
        app: jenkins
    spec:
      serviceAccountName: jenkins
      containers:
        - name: jenkins
          image: jnjam6681/jenkins:latest
          imagePullPolicy: Always
          ports:
          - name: jenkins-port
            containerPort: 8080
            protocol: TCP
          volumeMounts:
          - name: docker-sock
            mountPath: /var/run/docker.sock
          - name: jenkins-home
            mountPath: "/var/jenkins_home"
          # env:
            # - name: ADMIN_USER
            #   value: admin
            # - name: ADMIN_PASSWORD
            #   value: admin
      securityContext:
        runAsUser: 1000
        fsGroup: 1000
      # nodeSelector:
      #   kubernetes.io/hostname: node-03-gfg5
      volumes:
      - name: jenkins-home
        persistentVolumeClaim:
          claimName: jenkins-k8s-claim
      - name: docker-sock
        hostPath:
          path: /var/run/docker.sock
  volumeClaimTemplates:
  - metadata:
      name: jenkins-k8s-claim
    spec:
      accessModes: [ "ReadWriteOnce" ]
      storageClassName: do-block-storage
      resources:
        requests:
          storage: 5Gi
